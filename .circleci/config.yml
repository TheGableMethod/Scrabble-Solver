# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.6.1

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          
          
      - run:
          name: Veracode Scan Status
          command: ./veracode-scan.sh 01c7cb2a7490bb83e7c0d9930f264d01 2a3af12da00f77061440b3b17a62c77ff2c825959d0ed2dca5bb62b9536948e2f00b66aaf604fbfe7a4f1aa3b8928c88bebe814e291656c60b2ce6adfd020323 "Ian CircleCI Test App" "/home/circleci/repo/target/Verademo.war" $CIRCLECI_BUILD_NUM

      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
#       - run:
#           name: run tests
#           command: |
#             . venv/bin/activate
#             python manage.py test

#       - store_artifacts:
#           path: test-reports
#           destination: test-reports
